@page "/data/reservations"

@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Extensions.Logging
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using campingplads.Models

@inject IReservations _reservationDB
@inject IOrders _orderDB

<h1>reservation page</h1>
<h4>Insert New lot</h4>
<EditForm Model="@lot" OnSubmit="@Insert">
<DataAnnotationsValidator />
<ValidationSummary/>

<InputNumber id="lotSize" @bind-Value="lot.lotSize"/>
<InputNumber id="rented" @bind-Value="lot.rented"/>

<InputText id="LotID" Value="what lot do you want to stay at" />
<InputText id="First name" @bind-Value="order.firstName" />
<InputText id="Last Name" @bind-Value="order.lastName" />
<InputNumber id="Phone_Number" @bind-Value="order.phoneNumber" />
<InputText id="Email" @bind-Value="order.email" />

<button type="submit" class="btn btn-primary">submit</button>
</EditForm>



<h4>current reservations</h4>

@if(lots is null){
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>lot ID</th>
                <th>lot size</th>
                <th>rented</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reservation in lots)
            {
                <tr>
                    <td>@reservation.lotID</td>
                    <td>@reservation.lotSize</td>
                    <td>@reservation.Rented</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<OrderModel> orders;
    private List<LotsModel> lots;
    private DisplayLotsModel lot = new DisplayLotsModel();
    private DisplayOrderModel order = new DisplayOrderModel();
    protected override async Task OnInitializedAsync()
    {
        lots = await _reservationDB.GetLot();
        orders = await _orderDB.GetTable();
    }

    private async Task Insert(){
        LotsModel p = new LotsModel {
                lotSize = lot.lotSize,
                Rented = lot.rented
            };
        OrderModel l = new OrderModel
            {
                firstName = order.firstName,
                lastName = order.lastName,
                email = order.email,
                adress = order.adress
            };
        await _reservationDB.InsertLot(p);
        await _orderDB.InsertRow(l);

        lots.Add(p);
        orders.Add(l);
        lot = new DisplayLotsModel();
        order = new DisplayOrderModel();
    }
}
